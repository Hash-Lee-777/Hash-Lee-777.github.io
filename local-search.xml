<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>建站小记</title>
    <link href="/2023/12/26/%E5%BB%BA%E7%AB%99%E5%B0%8F%E8%AE%B0/"/>
    <url>/2023/12/26/%E5%BB%BA%E7%AB%99%E5%B0%8F%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="个人网站搭建过程"><a href="#个人网站搭建过程" class="headerlink" title="个人网站搭建过程"></a>个人网站搭建过程</h2><p>本过程参考友链Rlin的配置过程，记录建站全过程~</p><hr><h3 id="一、Git安装与Node-js安装"><a href="#一、Git安装与Node-js安装" class="headerlink" title="一、Git安装与Node.js安装"></a>一、Git安装与Node.js安装</h3><p>前者参考：<a href="https://blog.csdn.net/mukes/article/details/115693833?ops_request_misc=%7B%22request_id%22:%22170357511516800192296687%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=170357511516800192296687&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-115693833-null-null.142%5Ev97%5Epc_search_result_base2&utm_term=git%E5%AE%89%E8%A3%85&spm=1018.2226.3001.4187">Git 详细安装教程（详解 Git 安装过程的每一个步骤）_git安装-CSDN博客</a></p><p>后者参考：<a href="https://blog.csdn.net/qq_42006801/article/details/124830995?ops_request_misc=%7B%22request_id%22:%22170357337216800225546634%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=170357337216800225546634&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-2-124830995-null-null.142%5Ev96%5Epc_search_result_base2&utm_term=Node.js%E5%AE%89%E8%A3%85&spm=1018.2226.3001.4187">Node.js安装与配置（详细步骤）_nodejs安装及环境配置-CSDN博客</a></p><p>注意安装过程出现问题可以尝试更换网络，开关梯子，留意博客中评论区和博主在后面记录可能出现的问题，再不行谷歌，再不行就chatgpt~</p><hr><h3 id="二、Hexo安装"><a href="#二、Hexo安装" class="headerlink" title="二、Hexo安装"></a>二、Hexo安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">npm install -g hexo-cli</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">hexo init Hash-Lee-777.github.io  <span class="hljs-comment"># 为后续更新到github上，使用github名字.github.io</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> Hash-Lee-777.github.io  <span class="hljs-comment"># 进入本地的博客文件夹</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">npm install</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">hexo server <span class="hljs-comment"># 打开本地服务器预览</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">npm install --save hexo-theme-fluid <span class="hljs-comment"># 安装fluid主题，注意可以先新开一个cmd窗口进io或者ctrl c后再执行</span></span><br></code></pre></td></tr></table></figure><p>注意：建议不使用第六行命令，因为会自动安装到module文件夹，而后续github配置是不推送此文件夹上去的。</p><p>我选择直接去GitHub下载<a href="https://github.com/fluid-dev/hexo-theme-fluid/releases/tag/v1.9.5">release源码</a>，解压到hexo项目的themes目录下，重命名为fluid。注意：有嵌套层，需要把最里面的文件夹里粘贴到倒数第二层文件夹，否则会报错，这个错误坑了我好久o(╥﹏╥)o</p><hr><h3 id="三、配置与本地部署"><a href="#三、配置与本地部署" class="headerlink" title="三、配置与本地部署"></a>三、配置与本地部署</h3><p>修改博客目录中_config的yaml文件（可以直接在code中打开）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">language: zh-CN  # 指定中文<br>theme: fluid  # 指定主题<br></code></pre></td></tr></table></figure><p>注意！不要直接粘贴，不然会报重复的错，因为theme在最底下，我第一次直接复制粘贴就报错了，可以ctrl f找一下对应位置。</p><p>执行如下命令，可以在本地生成静态页面：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">hexo clean  <span class="hljs-comment"># 清空一下缓存，有时候博客页面显示不正常也可以试试这个命令行</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">hexo g  <span class="hljs-comment"># hexo generate的简写，把刚刚做的改动生成更新一下</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">hexo server  <span class="hljs-comment"># 在本地服务器看看博客：https://localhost:4000</span></span><br></code></pre></td></tr></table></figure><hr><h3 id="四、部署Github-Page"><a href="#四、部署Github-Page" class="headerlink" title="四、部署Github Page"></a>四、部署Github Page</h3><p>Github Page是提供静态网站访问服务的，就是将静态网站项目传到GitHub上，它能为你提供一个url入口（如Hash-Lee-777.github.io），直接访问你的静态网站，而Hexo编译生成的就是一个静态网站。</p><p>首先我们得把生成的静态网站上传到GitHub中，GitHub中得有一个对应的仓库。所以第一步是创建一个名为<code>GitHub用户名.github.io</code>的代码仓库</p><p><img src="/2023/12/26/%E5%BB%BA%E7%AB%99%E5%B0%8F%E8%AE%B0/image-20231226201911122.png"></p><p>然后修改博客配置_config，改成自己的信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">deploy:<br>  type: git<br>  repo: git@github.com:xxxx/xxxx.github.io.git # xxxx是你的GitHub用户名<br>  branch: master<br></code></pre></td></tr></table></figure><p>然后生成站点文件并推送到远程仓库即可，推送时需要填GitHub账户和密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo clean  # 保险起见，每次我们都清空一下<br>hexo deploy --generate # ERROR Deployer not found: git的话，执行下一行命令。这是因为没有安装hexo-deployer-git插件,在站点目录下输入下面的命令安装插件就好了<br> npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>注意！！！第二行默认git push了，所以不用手动push！</p><p>推送命令参考github新建仓库后的页面给出的命令，这里不再给出。由于我的公钥在和别人协作项目，添加到了别人的账号里，所以git push不了，这里我的解决方案是直接让我朋友删除key，添加到自己账号再push，你也可以选择生成一个新的ssh key~</p><p>如果你和我一样在win下操作，可能会遇到如下报错：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">warning: in the working copy of &#x27;package-lock.json&#x27;, LF will be replaced by CRLF the next time Git touches it<br>warning: in the working copy of &#x27;package.json&#x27;, LF will be replaced by CRLF the next time Git touches it<br></code></pre></td></tr></table></figure><p>这是换行符的问题，Windows下换行符和Unix下的换行符不一样，git会自动转换，但是这样有问题，所以解决方法如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">提交时转换为LF，检出时转换为CRLF</span><br>git config --global core.autocrlf true<br></code></pre></td></tr></table></figure><p>适用于Windows系统，且一般为Windows默认设置，会在提交时对换行符进行CRLF - LF的转换，检出时又会进行LF - CRLF的转换。</p><hr><h3 id="五、修改页面配置"><a href="#五、修改页面配置" class="headerlink" title="五、修改页面配置"></a>五、修改页面配置</h3><p>更多配置可以参考Hexo官方文档：<a href="https://hexo.io/zh-cn/docs/configuration">Hexo 配置</a>，以及Fluid官方文档：<a href="https://hexo.fluid-dev.com/docs/guide/">Fluid 配置指南</a>。Hexo配置是博客主目录下的_config.yml，Fluid配置是node_modules下的hexo-theme-fluid（手动从release下安装的是在theme文件夹下）</p><p>踩坑：</p><p>1.要修改fluid配置，要把其复制到项目的根目录再修改，否则修改无效。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
